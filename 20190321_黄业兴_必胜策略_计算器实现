## 必胜策略
> 现在有两堆石子,小今与小条玩游戏,2个人都足够聪明,两个人规定:每次每人只能从其中一堆中取走1个或2个或3个石子,最后将
石子全部取完的人胜利.现在两堆石子的个数为8和9,请问如何安排才能让小今必胜?

将题目进行化简

> 1堆石头，每次每人只能从其中一堆中取走1个或2个，现在有5个石头。
那么有一种思路，小今第一次拿走2个石头，剩下3个石头，无论小条怎么取，都是小今获胜。

> 1堆石头，每次每人只能从其中一堆中取走1个或2个，现在有6个石头。
这次让小条先拿，如果小条拿1个石头，小今就拿2个，或者 小条2个，小今1个，那么又是剩下3个石头，无论小条怎么取，都是
小今获胜

> 1堆石头，每次每人只能从其中一堆中取走1个或2个或3个，现在有5个石头。
小今先拿1个，剩下4个无论怎样都是小今胜利。

> 1堆石头，每次每人只能从其中一堆中取走1个或2个或3个，现在有8个石头。
小条先拿1个，小今拿3个，剩下4个无论怎样都是小今胜利。

小条先拿2个，小今拿2个，剩下4个无论怎样都是小今胜利。

小条先拿3个，小今拿1个，剩下4个无论怎样都是小今胜利。

所以不难发现，这中题目的奥秘就在于凑剩下的石头个数，这个个数就是**1+n**

这道题的答案就是 这两堆石头分别凑4的倍数。

## Bison&Flex编写计算器
### 识别不同类型的输入
* 通过一个类，在类中保存数据的类型和值。在规约的过程中都会创建这么一个类的实例节点。
* 例如 1+1 那么就会生成两个节点保存这两个数，计算完成后，也会将结果2保存在一个新的节点里。
* 最后输出的时候就可以判断数据的类型。

### extern的使用
extern表示引入外部变量，就是说如果当前文件中不存在这个变量的声明，那么就去其他文件中找。

在实现计算器的变量声明功能时，需要引入符号表。但是符号表是作为一个类写在了其他cpp文件中，如果.y文件要用到，
就需要通过extern来标记需要用到的变量。

在编译的过程中，需要将引入的文件都写在命令中。
g++ lexer.cpp parser.cpp table.cpp node.cpp -I.


